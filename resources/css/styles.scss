/* Variables, extendors & mixins */
$bgColor: rgb(12, 18, 44);
$fgColor: rgb(30, 44, 105);
$rmColor: #ffffff;


@mixin borderRadius ($std, $topRight) {
    border-radius: $std;
    border-top-right-radius: $topRight;
}

%globalDimensions {
    height: 100%;    
    width: 100%;
}

%globalMargin {
    margin: 0 auto;
    overflow-x: hidden;
}

%gridBox {
    background-color: $bgColor;
    height: 40px;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    @include borderRadius(10px, 10px);
       
}

/*
======================================== */

/* 1. Global Styles
======================================== */

* {
    box-sizing: border-box;
  }  

  html {
    @extend %globalDimensions; 
    @extend %globalMargin;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
  }
  
  body {
    @extend %globalDimensions;  
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    color: #ffffff;
    background: $bgColor;
    font-family: 'Roboto', sans-serif;
    font-size: 14px;
  }

 /* ======================================== */

  /* 2. Typography Styles
============================================ */





 /* ======================================== */

  /* 3. Structure Styles
============================================ */
.Container {
    @extend %globalDimensions;     
    
    &-background {   
    @media only screen and (max-width: 480px) {
        background: url(../images/bg-mobile.svg);
        height: 100%;
        width: 100%;
        z-index: -10;
        position: fixed;
        top: 0;
        left: 0;
    }
    @media only screen and (min-width: 900px) {
        position: fixed;
        bottom: 0;
        left: 0;
        height: 420px;
        width: 100%;
        background: url(../images/bg-desktop.svg) bottom;  
        background-repeat: repeat-x;       
        border-top-left-radius: 200px;
        z-index: -10;
       }
    }

    &-content {
        z-index: 99;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: flex-end;
        align-content: center;
        flex-wrap: wrap;
    }
    
    
}



/* Left box - using grid */

.Grid {
    @media only screen and (min-width: 900px) {
        margin-left: 15px;
    }
    display: inline-grid;
    grid-template-columns: repeat(3, 40px);
    grid-gap: 20px;
    background-color: $fgColor;
    padding: 40px 120px 40px 40px;    
    max-width: 280px;
    @include borderRadius(10px, 100px);
    

    &-one {
        grid-column: 1 / 4;
        grid-row: 1;
        
    }

    &-two {
        grid-column: 1 / 2;
        grid-row: 2;
        @extend %gridBox;
    }

    &-three {
        grid-column: 2 / 3;
        grid-row: 2;
        @extend %gridBox;

    }

    &-four {
        grid-column: 3 / 4;
        grid-row: 2;
        @extend %gridBox;
        
    }
}

/* Right box - using ? */
.Status {
    background-color: $fgColor;
    display: flex;
    flex-direction: column;
    padding: 30px 20px 30px 30px;
    @include borderRadius(10px, 10px);
    @media only screen and (max-width: 480px) {
        
        width: 280px;  
        margin-top: 1rem;     
    }

    @media only screen and (min-width: 900px) {
        margin-left: 35px;
        height: 140px;
        width: 500px;
    }

    &-bar {
        background-color: $bgColor;
        height: 1.2rem;
        @include borderRadius(10px, 10px);
        margin-top: 1rem;

        &--fill {
            @include borderRadius(10px, 10px);
            background: linear-gradient(90deg,#fea095, #fa4c90);
            border: 3px solid $bgColor;
            display: flex;
            justify-content: flex-end;
            max-width: 70%;
            
        }

        &--circle {
            @include borderRadius(10px, 10px);
            background-color: #ffffff;
            width: 10px;
            height: 10px;
            margin: 2px;
        }

        &-limits {
            display: flex;
            justify-content: space-between;
            margin-top: 0.7rem;

            &--units {
                font-size: 0.7rem;
                padding-bottom: 30px;
            }
        }    
    }    
}

.Remaining {
    display: flex;
    justify-content: center;
    align-items: center;
    @include borderRadius(10px, 10px);
    text-align: center;
    background-color: $rmColor;
    width: 160px;
    height: 4rem;
    margin-top: -2rem;
    z-index: 99;

    

    @media only screen and (min-width: 900px) {
        position: relative;
        left: -190px;
        top: -115px;

        &::after {
            border-right: 20px solid transparent;
            border-top: 20px solid #ffffff;
            bottom: -20px;
            content: "";
            position: absolute;
            right: 10px;
          }
    }

    &-amount {
        color: #000000;
        font-size: 2rem;
        font-weight: bold;
    }

    &-unit {
        color: gray;
        font-weight: bold;
        font-size: 0.7rem;
        padding-left: 5px;
    }

}

 