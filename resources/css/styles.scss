/* Variables, extendors & mixins */
$bgColor: rgb(12, 18, 44);
$fgColor: rgb(30, 44, 105);


@mixin borderRadius ($std, $topRight) {
    border-radius: $std;
    border-top-right-radius: $topRight;
}

%globalDimensions {
    height: 100%;    
    width: 100%;
}

%globalMargin {
    margin: 0 auto;
    overflow-x: hidden;
}

%gridBox {
    background-color: $bgColor;
    height: 40px;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    @include borderRadius(10px, 10px)
       
}

/*
======================================== */

/* 1. Global Styles
======================================== */

* {
    box-sizing: border-box;
  }  

  html {
    @extend %globalDimensions; 
    @extend %globalMargin;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
  }
  
  body {
    @extend %globalDimensions;  
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    color: #ffffff;
    background: $bgColor;
    
  }

 /* ======================================== */

  /* 2. Typography Styles
============================================ */





 /* ======================================== */

  /* 3. Structure Styles
============================================ */
.Container {
    @extend %globalDimensions;     
    
    &-background {   
    @media only screen and (max-width: 480px) {
        background: url(../images/bg-mobile.svg);
        height: 100%;
        width: 100%;
        z-index: -10;
        position: fixed;
        top: 0;
        left: 0;
    }
    @media only screen and (min-width: 900px) {
        position: fixed;
        bottom: 0;
        left: 0;
        height: 420px;
        width: 100%;
        background: url(../images/bg-desktop.svg) bottom no-repeat;       
        border-top-left-radius: 200px;
        z-index: -10;
       }
    }

    &-content {
        z-index: 99;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
    }
    
    
}



/* Left box - using grid */

.Grid {
    display: inline-grid;
    grid-template-columns: repeat(3, 40px);
    grid-gap: 20px;
    background-color: $fgColor;
    padding: 40px 120px 40px 40px;    
    max-width: 280px;
    @include borderRadius(10px, 100px)
    

    &-one {
        grid-column: 1 / 4;
        grid-row: 1;
        
    }

    &-two {
        grid-column: 1 / 2;
        grid-row: 2;
        @extend %gridBox;
    }

    &-three {
        grid-column: 2 / 3;
        grid-row: 2;
        @extend %gridBox;

    }

    &-four {
        grid-column: 3 / 4;
        grid-row: 2;
        @extend %gridBox;
        
    }
}

/* Right box - using ? */


 